services:
    neo4j-service:
        image: neo4j:5
        container_name: databank-neo4j
        restart: unless-stopped
        ports:
            - "7687:7687"
        environment:
            NEO4J_AUTH: neo4j/password1234
        volumes:
            - databank_neo4j_data:/data
        networks:
            - app-network
    mongodb-service:
        image: mongodb/mongodb-community-server:latest
        container_name: databank-mongodb
        restart: unless-stopped
        ports:
            - "38130:27017"
        volumes:
            - databank_mongodb:/data/db 
        environment:
            MONGO_INITDB_ROOT_USERNAME: databank
            MONGO_INITDB_ROOT_PASSWORD: password1234
            MONGODB_EXTRA_ARGS: --logpath /var/log/mongodb/mongod.log --logappend --verbose
        networks:
            - app-network
    backend-data-bank-service:
        build: ./backend-data-bank
        container_name: backend-data-bank
        restart: unless-stopped
        ports:
            - "5000:5000"   
        env_file:
            - ./backend-data-bank/.env
        depends_on:
            - mongodb-service
            - neo4j-service
        networks:
            - app-network  # Add this so backend can communicate with frontend

    # frontend-data-bank-service:
    #     build:
    #         context: ./frontend-data-bank
    #         dockerfile: Dockerfile
    #     container_name: frontend-data-bank
    #     ports:
    #         - "3000:3000"
    #     restart: unless-stopped
    #     env_file:
    #         - ./frontend-data-bank/.env
    #     depends_on:
    #         - backend-data-bank-service
    #     networks:
    #         - app-network
volumes:
    databank_mongodb:
    databank_neo4j_data:


# docker-compose down --volumes --rmi all
 
networks:
  app-network:
    driver: bridge